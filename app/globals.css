@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* --- THE CRITICAL FIXES ARE HERE --- */
html,
body {
  /* Set background and color from variables */
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;

  /* ESSENTIAL FOR SCROLLING */
  height: 100%; /* Ensures html and body take 100% of their parent's height (which is the viewport) */
  min-height: 100vh; /* Ensures they take at least 100% of the viewport height */
  
  /* Manage overflow: */
  /* This prevents horizontal scrolling (often desirable).
     Vertical scrolling (overflow-y) is 'auto' by default, meaning it will scroll if content overflows. */
 
  /* DO NOT set overflow-y: hidden; here unless you explicitly want to disable vertical scrolling */
}

/* IMPORTANT for Next.js App Router: 
   The root div generated by Next.js (often with ID #__next) also needs to fill the screen.
   This can sometimes be named differently or implicitly handled by Tailwind's resets,
   but explicitly setting it can resolve issues. */
#__next {
  height: 100%;
  min-height: 100vh;
  display: flex;        /* Useful for typical layouts (e.g., header, main, footer in column) */
  flex-direction: column; /* Stacks children vertically */
}

/* --- END CRITICAL FIXES --- */


.input-style {
  @apply w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400;
}

/* Optional: for global control if not using inline styles */
.cursor-glow {
  position: fixed;
  z-index: 9999;
  border-radius: 9999px;
  background: radial-gradient(circle, rgba(255,255,255,0.1), transparent);
  backdrop-filter: blur(2px);
  mix-blend-mode: difference;
  transition: width 0.2s ease, height 0.2s ease;
}